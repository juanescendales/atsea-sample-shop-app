name: CI - Docker Build and Push | AWS EC2 CD

on:
  push:
    branches: [ master ]

jobs:

  docker:
    
    runs-on: ubuntu-latest
    name: DockerHub build and push
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set commit SHA
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Check commit SHA
      run: echo ${{ steps.vars.outputs.sha_short }}
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Build and push app
      id: docker_build_app
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: juanescendales/atsea_app:latest,juanescendales/atsea_app:${{ steps.vars.outputs.sha_short }}
        context: app
          
    - name: Build and push database
      id: docker_build_database
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: juanescendales/atsea_db:latest,juanescendales/atsea_db:${{ steps.vars.outputs.sha_short }}
        context: database
        
    - name: Build and push reverse proxy
      id: docker_build_reverse_proxy
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: juanescendales/atsea_reverse_proxy:latest,juanescendales/atsea_reverse_proxy:${{ steps.vars.outputs.sha_short }}
        context: reverse_proxy
        
    - name: Build and push payment gateway
      id: docker_build_payment_gateway
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: juanescendales/atsea_payment_gateway:latest,juanescendales/atsea_payment_gateway:${{ steps.vars.outputs.sha_short }}
        context: payment_gateway
        
  cd:
  
      needs: docker
      name: Upload to AWS EC2

      runs-on: ubuntu-latest

      steps:
      
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Start EC2 Instance
        run: |
          aws ec2 start-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }}

      - name: Sleep for 50s to make time to start machine
      uses: juliangruber/sleep-action@v1
      with:
        time: 50s
        
      - name: Docker compose to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "./docker-compose.yml"
          target: "/home/${{ secrets.EC2_USERNAME }}"
          timeout: 360s

      - name: Setup enviroment of deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          timeout: 360s
          script: | 
            if ! [[ -d "./devsecrets" ]]; then mkdir devsecrets; fi
            if ! [[ -d "./certs" ]]; then mkdir certs; fi
            echo ${{ secrets.POSTGRES_PASSWORD }} > devsecrets/postgres_password
            echo ${{ secrets.PAYMENT_TOKEN }} > devsecrets/payment_token
            echo "${{ secrets.DOMAIN_CRT }}" > certs/domain.crt
            echo "${{ secrets.DOMAIN_KEY }}" > certs/domain.key
      
      - name: Running the app in EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          timeout: 360s
          script: | 
            sudo docker swarm init
            sudo docker stack deploy --compose-file docker-compose.yml atsea-app
      - name: Trigger end to end tests
        run: |
          curl --request POST \
          --url https://api.github.com/repos/juanescendales/tests-atsea-sample-shop-app/dispatches \
          --header 'authorization: Bearer ${{ secrets.ACCESS_TOKEN }}' \
          --header 'Accept: application/vnd.github.v3+json' \
          --data '{
            "event_type": "deployed"
            }' \
          --fail
